// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250101010822_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("api.Models.Exercise", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Set")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoutineId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("api.Models.ExerciseLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Rep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseLog");
                });

            modelBuilder.Entity("api.Models.Plan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("api.Models.Rep", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reps")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Rep");
                });

            modelBuilder.Entity("api.Models.Routine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ScheduleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("api.Models.Exercise", b =>
                {
                    b.HasOne("api.Models.Routine", null)
                        .WithMany("Exercises")
                        .HasForeignKey("RoutineId");
                });

            modelBuilder.Entity("api.Models.ExerciseLog", b =>
                {
                    b.HasOne("api.Models.Exercise", null)
                        .WithMany("Log")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("api.Models.Rep", b =>
                {
                    b.HasOne("api.Models.Exercise", null)
                        .WithMany("Rep")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("api.Models.Routine", b =>
                {
                    b.HasOne("api.Models.Plan", null)
                        .WithMany("Routines")
                        .HasForeignKey("PlanId");

                    b.HasOne("api.Models.Schedule", null)
                        .WithMany("Routines")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.HasOne("api.Models.Event", null)
                        .WithMany("Schedule")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("api.Models.Event", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("api.Models.Exercise", b =>
                {
                    b.Navigation("Log");

                    b.Navigation("Rep");
                });

            modelBuilder.Entity("api.Models.Plan", b =>
                {
                    b.Navigation("Routines");
                });

            modelBuilder.Entity("api.Models.Routine", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.Navigation("Routines");
                });
#pragma warning restore 612, 618
        }
    }
}
